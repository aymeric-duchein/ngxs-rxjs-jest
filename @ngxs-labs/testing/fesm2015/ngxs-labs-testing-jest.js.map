{"version":3,"file":"ngxs-labs-testing-jest.js","sources":["ng://@ngxs-labs/testing/jest/jest-helpers.ts"],"sourcesContent":["import { of, Subject } from 'rxjs';\r\nimport { Store } from '@ngxs/store';\r\nimport { TestBed } from '@angular/core/testing';\r\n\r\nexport class NgxsJestHelper {\r\n    private static mockedSelector: { key: any; value: Subject<any> }[] = [];\r\n\r\n    static mockSelect<T>(selectorFn: (state: any) => T): Subject<T> {\r\n        const store: Store = TestBed.get(Store);\r\n        if (!jest.isMockFunction(store.select)) {\r\n            jest.spyOn(store, 'select').mockImplementation((selector) => {\r\n                const match = NgxsJestHelper.mockedSelector.find((s) => s.key === selector);\r\n                if (match) {\r\n                    return match.value;\r\n                }\r\n                return of();\r\n            });\r\n        }\r\n\r\n        const subject = new Subject<T>();\r\n        NgxsJestHelper.mockedSelector = [\r\n            ...NgxsJestHelper.mockedSelector.filter((s) => s.key !== selectorFn),\r\n            { key: selectorFn, value: subject }\r\n        ];\r\n        return subject;\r\n    }\r\n}\r\n\r\nexport const mockSelect = NgxsJestHelper.mockSelect;\r\n"],"names":[],"mappings":";;;;;;;;AAAA,MAIa,cAAc;;;;;;IAGvB,OAAO,UAAU,CAAI,UAA6B;;cACxC,KAAK,GAAU,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;YACpC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,kBAAkB;;;;YAAC,CAAC,QAAQ;;sBAC9C,KAAK,GAAG,cAAc,CAAC,cAAc,CAAC,IAAI;;;;gBAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,QAAQ,EAAC;gBAC3E,IAAI,KAAK,EAAE;oBACP,OAAO,KAAK,CAAC,KAAK,CAAC;iBACtB;gBACD,OAAO,EAAE,EAAE,CAAC;aACf,EAAC,CAAC;SACN;;cAEK,OAAO,GAAG,IAAI,OAAO,EAAK;QAChC,cAAc,CAAC,cAAc,GAAG;YAC5B,GAAG,cAAc,CAAC,cAAc,CAAC,MAAM;;;;YAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,UAAU,EAAC;YACpE,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;SACtC,CAAC;QACF,OAAO,OAAO,CAAC;KAClB;;AApBc,6BAAc,GAAwC,EAAE,CAAC;;;;;;IAAxE,8BAAwE;;;AAuB5E,MAAa,UAAU,GAAG,cAAc,CAAC,UAAU;;;;;;;;;;;;;;"}